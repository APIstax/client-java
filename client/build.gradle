plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.openapi.generator' version '7.5.0'
    id 'org.kordamp.gradle.jandex' version '2.0.0'
}

version = "1.4.1"

dependencies {
    implementation "jakarta.annotation:jakarta.annotation-api:3.0.0"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "com.fasterxml.jackson.core:jackson-core:2.17.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.17.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.17.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1"
    implementation "org.openapitools:jackson-databind-nullable:0.2.6"
    implementation "io.mikael:urlbuilder:2.0.9"

    testImplementation "org.wiremock:wiremock:3.9.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.2"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }

    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/sources/openapi/src/main/java"
        }
    }
}

jar {
    manifest {
        attributes(
                "Implementation-Title": "APIstax Java Client",
                "Implementation-Vendor": "instant:solutions OG",
                "Implementation-URL": "https://apistax.io",
                "Bundle-License": "https://raw.githubusercontent.com/APIstax/client-java/main/LICENSE",
                "Scm-Connection": "scm:git:github.com/apistax/client-java.git",
                "Scm-Url": "https://github.com/apistax/client-java",
                "Build-Jdk-Spec": java.toolchain.languageVersion.get().asInt()
        )
    }
}

openApiGenerate {
    generatorName = 'java'
    inputSpec = "$projectDir/api.yml"
    outputDir = "$buildDir/generated/sources/openapi"
    packageName = 'io.apistax'
    modelPackage = 'io.apistax.models'
    apiPackage = 'io.apistax.apis'
    library = 'native'

    globalProperties = [
            apis           : 'false',
            models         : '',
            modelDocs      : 'false',
            modelTests     : 'false',
            supportingFiles: 'false'
    ]

    configOptions = [
            dateLibrary        : 'java8',
            useRuntimeException: 'true',
            useJakartaEe       : 'true'
    ]
}

Properties properties = new Properties()
if (System.getenv("OSSRH_USERNAME") == null) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} else {
    properties.put("ossrhUsername", System.getenv("OSSRH_USERNAME"))
    properties.put("ossrhPassword", System.getenv("OSSRH_PASSWORD"))
}

publishing {
    publications {
        apistax(MavenPublication) {
            groupId = 'io.apistax'
            artifactId = 'apistax-client'
            from components.java

            pom {
                name = 'apistax-client'
                description = 'Secure and reliable APIs for your common business needs.'
                url = 'https://apistax.io'
                inceptionYear = '2022'

                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://raw.githubusercontent.com/APIstax/client-java/main/LICENSE'
                    }
                }

                organization {
                    name = 'instant:solutions OG'
                    url = 'https://instant-it.at'
                }

                developers {
                    developer {
                        id = 'holzleitner'
                        name = 'Max Holzleitner'
                        email = 'max.holzleitner@instant-it.at'
                        organization = 'instant:solutions OG'
                        organizationUrl = 'https://instant-it.at'
                        timezone = 'Europe/Vienna'
                    }

                    developer {
                        id = 'andlinger'
                        name = 'David Andlinger'
                        email = 'david.andlinger@instant-it.at'
                        organization = 'instant:solutions OG'
                        organizationUrl = 'https://instant-it.at'
                        timezone = 'Europe/Vienna'
                    }
                }

                scm {
                    connection = 'scm:git:github.com/apistax/client-java.git'
                    developerConnection = 'scm:git:github.com/apistax/client-java.git'
                    url = 'https://github.com/apistax/client-java'
                }
            }
        }
    }

    repositories {
        maven {
            name = "ossrh"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = properties.getProperty('ossrhUsername')
                password = properties.getProperty('ossrhPassword')
            }
        }

        maven {
            name = "ossrhSnapshot"
            url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            credentials {
                username = properties.getProperty('ossrhUsername')
                password = properties.getProperty('ossrhPassword')
            }
        }
    }
}

signing {
    sign publishing.publications.apistax
}

compileJava.dependsOn tasks.openApiGenerate
sourcesJar.dependsOn tasks.openApiGenerate
compileTestJava.dependsOn tasks.jandex
javadoc.dependsOn tasks.jandex