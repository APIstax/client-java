---
openapi: 3.0.3
info:
  title: APIstax
  termsOfService: https://apistax.io/terms-of-use
  contact:
    name: APIstax Support
    email: support@apistax.io
  license:
    name: Copyright instant:solutions OG
    url: https://instant-it.at
  version: 1.4.0
servers:
  - url: https://api.apistax.io
security:
  - ApiKeyHeader: []
paths:
  /v1/html-to-pdf:
    post:
      tags:
        - HTML to PDF
      summary: Convert HTML to PDF
      operationId: convertHtmlToPdf
      requestBody:
        description: HTML payload to convert
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HtmlPayload"
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          $ref: "#/components/responses/HtmlToPdf"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /v1/epc-qr-code:
    get:
      tags:
        - EPC QR Code
      summary: Generate a valid EPC QR Code
      operationId: generateEpcQrCode
      parameters:
        - name: bic
          in: query
          description: The bank identifier code of the recipient bank
          required: false
          schema:
            type: string
        - name: iban
          in: query
          description: The international bank account number of the recipient
          required: true
          schema:
            type: string
        - name: recipient
          in: query
          description: The recipients name
          required: true
          schema:
            type: string
        - name: currency
          in: query
          description: The currency according to ISO 4217
          required: false
          schema:
            default: EUR
            type: string
        - name: amount
          in: query
          description: The amount with a maximum of two decimal places
          required: false
          schema:
            format: float
            type: number
        - name: reference
          in: query
          description: The payment reference
          required: false
          schema:
            type: string
        - name: text
          in: query
          description: The bank transfer text
          required: false
          schema:
            type: string
        - name: size
          in: query
          description: The size of the QR code in pixels
          required: false
          schema:
            format: int32
            default: 300
            maximum: 2000
            minimum: 100
            type: integer
        - name: frame
          in: query
          description: Draw a frame around the QR code
          required: false
          schema:
            default: false
            type: boolean
        - name: message
          in: query
          description: A user hint
          required: false
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/EpcQrCode"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
    post:
      tags:
        - EPC QR Code
      summary: Generate a valid EPC QR Code
      operationId: generateEpcQrCodeJson
      requestBody:
        description: QR Code payload to generate
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EpcQrCodePayload"
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          $ref: "#/components/responses/EpcQrCode"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /v1/vat-verification:
    get:
      tags:
        - Verify VAT ID
      summary: Verify a companies VAT ID if it is valid
      operationId: verifyVatId
      parameters:
        - name: vatId
          in: query
          description: The VAT ID to check.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/VatVerificationResult"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
    post:
      tags:
        - Verify VAT ID
      summary: Verify a companies VAT ID if it is valid
      operationId: verifyVatIdJson
      requestBody:
        description: VAT ID payload to verify
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VatVerificationPayload"
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          $ref: "#/components/responses/VatVerificationResult"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /v1/geocode/search:
    get:
      tags:
        - Geocoding
      summary: Convert a known address to geo-coordinates
      operationId: geocodeSearch
      parameters:
        - name: query
          in: query
          description: "A free-text address query. For example: \"Heldenplatz, Wien\"\
          \ or \"Wiedner Hauptstra√üe 32, 1040 Wien\""
          required: true
          schema:
            type: string
        - name: language
          in: query
          description: "The language used for result localization based on ISO 639-1.\
          \ For example: \"en\" or \"fr\""
          required: false
          schema:
            default: en
            type: string
      responses:
        "200":
          $ref: "#/components/responses/GeocodeResult"
        "204":
          description: An empty response if no entry could be found for the specified
            query.
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
    post:
      tags:
        - Geocoding
      summary: Convert a known address to geo-coordinates
      operationId: geocodeSearchJson
      requestBody:
        description: Query payload to search for
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeocodeSearchPayload"
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          $ref: "#/components/responses/GeocodeResult"
        "204":
          description: An empty response if no entry could be found for the specified
            query.
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /v1/geocode/reverse:
    get:
      tags:
        - Reverse Geocoding
      summary: Convert geo-coordinates to a postal address
      operationId: geocodeReverse
      parameters:
        - name: latitude
          in: query
          description: The latitude coordinate of a point to search for. For example
            "48.20661"
          required: true
          schema:
            format: double
            type: number
        - name: longitude
          in: query
          description: The longitude coordinate of a point to search for. For example
            "16.36301"
          required: true
          schema:
            format: double
            type: number
        - name: language
          in: query
          description: "The language used for result localization based on ISO 639-1.\
          \ For example: \"en\" or \"fr\""
          required: false
          schema:
            default: en
            type: string
      responses:
        "200":
          $ref: "#/components/responses/GeocodeResult"
        "204":
          description: An empty response if no entry could be found for the specified
            coordinates.
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
    post:
      tags:
        - Reverse Geocoding
      summary: Convert geo-coordinates to a postal address
      operationId: geocodeReverseJson
      requestBody:
        description: Coordinates payload to search for
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeocodeReversePayload"
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          $ref: "#/components/responses/GeocodeResult"
        "204":
          description: An empty response if no entry could be found for the specified
            coordinates.
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /v1/indexes/{index}:
    get:
      tags:
        - Indexes
      summary: "List various, always up-to-date indexes like consumer price index\
        \ for many countries"
      operationId: indexes
      parameters:
        - name: index
          in: path
          description: The identification of the index. A complete list of available
            indexes can be found in the documentation
          required: true
          schema:
            $ref: "#/components/schemas/Index"
        - name: frequency
          in: query
          description: The frequency in which the index is published
          required: false
          schema:
            $ref: "#/components/schemas/IndexFrequency"
      responses:
        "200":
          $ref: "#/components/responses/IndexResult"
        "204":
          description: An empty response if specified index is not available.
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /v1/invoice-pdf:
    post:
      tags:
        - Invoice PDF
      summary: Create a invoice PDF
      operationId: createInvoicePDFV1
      requestBody:
        description: The invoice object to create a PDF from.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoicePayloadV1"
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          $ref: "#/components/responses/InvoicePdf"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
      deprecated: true
  /v1/swiss-qr-invoice:
    post:
      tags:
        - Swiss QR Invoice
      summary: Create a Swiss QR invoice
      operationId: createSwissQrInvoice
      requestBody:
        description: The payload to generate QR invoice from
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SwissQrInvoicePayload"
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          $ref: "#/components/responses/SwissQrInvoice"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /v2/invoice-pdf:
    post:
      tags:
        - Invoice PDF
      summary: Create a invoice PDF
      operationId: createInvoicePDFV2
      requestBody:
        description: The invoice object to create a PDF from.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoicePayload"
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          $ref: "#/components/responses/InvoicePdf"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "406":
          $ref: "#/components/responses/NotAcceptable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
components:
  schemas:
    HtmlPayload:
      required:
        - content
      type: object
      properties:
        content:
          description: The HTML document to be converted
          type: string
        header:
          description: A HTML document used as PDF header
          type: string
        footer:
          description: A HTML document used as PDF footer
          type: string
        width:
          format: float
          description: Page width in centimeter
          default: 21
          type: number
        height:
          format: float
          description: Page height in centimeter
          default: 29.7
          type: number
        marginTop:
          format: float
          description: Top page margin in centimeter
          default: 1
          type: number
        marginBottom:
          format: float
          description: Bottom page margin in centimeter
          default: 1
          type: number
        marginStart:
          format: float
          description: Start (left) page margin in centimeter
          default: 1
          type: number
        marginEnd:
          format: float
          description: End (right) page margin in centimeter
          default: 1
          type: number
        landscape:
          description: Page orientation
          default: false
          type: boolean
        printBackground:
          description: Print background graphics
          default: false
          type: boolean
    ErrorMessage:
      required:
        - messages
      type: object
      properties:
        messages:
          description: A list of error messages
          type: array
          items:
            type: string
    EpcQrCodePayload:
      required:
        - iban
        - recipient
      type: object
      properties:
        bic:
          description: The bank identifier code of the recipient bank
          type: string
        iban:
          description: The international bank account number of the recipient
          type: string
        recipient:
          description: The recipients name
          type: string
        currency:
          description: The currency according to ISO 4217
          default: EUR
          type: string
        amount:
          format: float
          description: The amount with a maximum of two decimal places
          type: number
        reference:
          description: The payment reference
          type: string
        text:
          description: The bank transfer text
          type: string
        size:
          format: int32
          description: The size of the QR code in pixels
          default: 300
          maximum: 2000
          minimum: 100
          type: integer
        frame:
          description: Draw a frame around the QR code
          default: false
          type: boolean
        message:
          description: A user hint
          type: string
    VatVerificationResult:
      required:
        - valid
      type: object
      properties:
        valid:
          description: The validity of the passed VAT ID
          type: boolean
        name:
          description: The company's name related to the passed VAT ID
          type: string
        address:
          description: The company's address related to the passed VAT ID
          type: string
        countryCode:
          description: The company's country based on ISO 3166-1 alpha-2
          type: string
    VatVerificationPayload:
      required:
        - vatId
      type: object
      properties:
        vatId:
          description: The VAT ID to check.
          type: string
    GeocodeResult:
      required:
        - address
        - position
      type: object
      properties:
        position:
          description: "The coordinates (latitude, longitude) of a point on a map\
            \ corresponding to the searched place"
          required:
            - latitude
            - longitude
          type: object
          properties:
            latitude:
              format: double
              description: Latitude of the address. For example "48.20661"
              type: number
            longitude:
              format: double
              description: Longitude of the address. For example "16.36301"
              type: number
        address:
          description: The postal address of the searched place
          type: object
          properties:
            houseNumber:
              description: The house number. For example "1a" or "27"
              type: string
            street:
              description: Name of the street
              type: string
            city:
              description: The localised name of the city
              type: string
            postalCode:
              description: An alphanumeric string included in a postal address such
                as post code or ZIP code. For example "1010"
              type: string
            country:
              description: The localised country name
              type: string
            countryCode:
              description: A two letter country code based on ISO 3166-1 alpha-2.
                For example "AT"
              type: string
    GeocodeSearchPayload:
      required:
        - query
      type: object
      properties:
        query:
          description: "A free-text address query. For example: \"Heldenplatz, Wien\"\
            \ or \"Wiedner Hauptstra√üe 32, 1040 Wien\""
          type: string
        language:
          description: "The language used for result localization based on ISO 639-1.\
            \ For example: \"en\" or \"fr\""
          default: en
          type: string
    GeocodeReversePayload:
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          format: double
          description: The latitude coordinate of a point to search for. For example
            "48.20661"
          type: number
        longitude:
          format: double
          description: The longitude coordinate of a point to search for. For example
            "16.36301"
          type: number
        language:
          description: "The language used for result localization based on ISO 639-1.\
            \ For example: \"en\" or \"fr\""
          default: en
          type: string
    Index:
      enum:
        - at-cpi-1
        - at-cpi-2
        - at-cpi-1966
        - at-cpi-1976
        - at-cpi-1986
        - at-cpi-1996
        - at-cpi-2000
        - at-cpi-2005
        - at-cpi-2010
        - at-cpi-2015
        - at-cpi-2020
        - de-cpi-2015
        - at-eu-hicp-2015
        - be-eu-hicp-2015
        - bg-eu-hicp-2015
        - cz-eu-hicp-2015
        - dk-eu-hicp-2015
        - de-eu-hicp-2015
        - ee-eu-hicp-2015
        - ie-eu-hicp-2015
        - gr-eu-hicp-2015
        - es-eu-hicp-2015
        - fr-eu-hicp-2015
        - hr-eu-hicp-2015
        - it-eu-hicp-2015
        - cy-eu-hicp-2015
        - lv-eu-hicp-2015
        - lt-eu-hicp-2015
        - lu-eu-hicp-2015
        - hu-eu-hicp-2015
        - mt-eu-hicp-2015
        - nl-eu-hicp-2015
        - pl-eu-hicp-2015
        - pt-eu-hicp-2015
        - ro-eu-hicp-2015
        - si-eu-hicp-2015
        - sk-eu-hicp-2015
        - fi-eu-hicp-2015
        - se-eu-hicp-2015
        - is-eu-hicp-2015
        - no-eu-hicp-2015
        - ch-eu-hicp-2015
        - gb-eu-hicp-2015
        - mk-eu-hicp-2015
        - rs-eu-hicp-2015
        - tr-eu-hicp-2015
        - us-eu-hicp-2015
        - ea-eu-hicp-2015
        - eea-eu-hicp-2015
        - eu-eu-hicp-2015
      type: string
    IndexFrequency:
      enum:
        - MONTHLY
        - YEARLY
      type: string
    IndexValue:
      required:
        - year
        - value
      type: object
      properties:
        year:
          description: The year in the index series which the value represents
          type: integer
        month:
          description: The month in the index series which the value represents
          type: integer
        value:
          format: float
          description: The index value
          type: number
    IndexResult:
      required:
        - id
        - name
        - frequency
      type: object
      properties:
        id:
          description: The index name
          type: string
        name:
          description: The official name of the index
          type: string
        source:
          description: The data source of the index
          type: string
        frequency:
          $ref: "#/components/schemas/IndexFrequency"
        values:
          description: The index series in ascending order
          type: array
          items:
            $ref: "#/components/schemas/IndexValue"
    SwissQrInvoiceCreditor:
      required:
        - iban
        - name
        - postalCode
        - city
      type: object
      properties:
        iban:
          description: The international bank account number of the creditor
          type: string
        name:
          description: The creditors name
          maxLength: 70
          type: string
        street:
          description: The creditors street
          maxLength: 70
          type: string
        postalCode:
          description: The creditors postal code
          maxLength: 16
          type: string
        city:
          description: The creditors city
          maxLength: 35
          type: string
        country:
          description: The creditors country
          default: CH
          type: string
    SwissQrInvoiceDebtor:
      required:
        - name
        - postalCode
        - city
      type: object
      properties:
        name:
          description: The debtors name
          maxLength: 70
          type: string
        street:
          description: The debtors street
          maxLength: 70
          type: string
        postalCode:
          description: The debtors postal code
          maxLength: 16
          type: string
        city:
          description: The debtors city
          maxLength: 35
          type: string
        country:
          description: The debtors country
          default: CH
          type: string
    InvoicePayloadV1:
      required:
        - sender
        - recipient
        - items
      type: object
      properties:
        template:
          description: The invoice template
          default: DEFAULT
          enum:
            - DEFAULT
            - CLASSIC
            - MODERN
            - MINIMALISTIC
          type: string
        sender:
          description: The data of the invoice issuer
          type: array
          items:
            type: string
        recipient:
          description: The data of the invoice recipient
          type: array
          items:
            type: string
        logo:
          description: The logo of the invoice issuer encoded as base64.
          type: string
        locale:
          description: The country or language according to which the values are to
            be formatted.
          default: de-AT
          type: string
        currency:
          description: The currency according to ISO 4217
          default: EUR
          type: string
        items:
          description: The list of items that are to be invoiced.
          type: array
          items:
            description: "A single invoice item. Either unitPrice or sumPrice must\
              \ be set. If the unitPrice field is set, the sumPrice is calculated."
            required:
              - description
            type: object
            properties:
              description:
                description: The description of the invoice item
                type: string
              amount:
                format: double
                description: The amount of the invoice item
                default: 1
                type: number
              unit:
                description: "The optional unit, for example, kilogram or piece."
                type: string
              unitPrice:
                format: double
                description: The price per unit
                type: number
              sumPrice:
                format: double
                description: "The total price of the invoice item. If the field is\
                  \ not set, it is calculated using the unit price and amount."
                type: number
        footerItems:
          description: "The list of footer items. An informative element that is shown\
            \ in the footer of the invoice, for example, to display information about\
            \ the company."
          type: array
          items:
            description: "An informative element that is shown in the footer of the\
              \ invoice, for example, to display information about the company."
            type: object
            properties:
              title:
                description: The item title
                type: string
              values:
                description: A list of values
                type: array
                items:
                  type: string
        contextItems:
          description: "The list of context items. An informative element that is\
            \ shown in the content of the invoice, for example to display detailed\
            \ information such as the invoice number for the respective invoice."
          type: array
          items:
            description: "An informative element that is shown in the content of the\
              \ invoice, for example to display detailed information such as the invoice\
              \ number for the respective invoice."
            type: object
            properties:
              title:
                description: The item title
                type: string
              value:
                description: The item value
                type: string
        feeTaxItems:
          description: "The list of fee and tax items. An element to add any tax and/or\
            \ fees in addition to the invoice items. When using the 'percent' field,\
            \ the value is calculated from the sum of the invoice items including\
            \ any previous taxes and fees. The values are calculated in the order\
            \ passed."
          type: array
          items:
            description: "An element to add any tax and/or fees in addition to the\
              \ invoice items. When using the 'percent' field, the value is calculated\
              \ from the sum of the invoice items including any previous taxes and\
              \ fees. The values are calculated in the order passed."
            required:
              - title
            type: object
            properties:
              title:
                description: The element title for example "20% VAT" or "Dunning charge".
                type: string
              percent:
                format: float
                description: The item percent. The resulting value is calculated from
                  the sum of the invoice items including any previous taxes and fees.
                  The values are calculated in the order passed.
                type: number
              value:
                format: double
                description: The item value
                type: number
        notice:
          description: A note that is printed at the end of the invoice.
          type: string
        labels:
          description: 'This object can be used to overwrite standard invoice texts. '
          type: object
          properties:
            invoice:
              default: Invoice
              type: string
            subtotal:
              default: Subtotal
              type: string
            total:
              default: Total
              type: string
            amount:
              default: Amount
              type: string
            description:
              default: Description
              type: string
            unitPrice:
              default: Unit price
              type: string
            sumPrice:
              default: Sum price
              type: string
            numberOfPages:
              description: "Use the placeholders {current} and {total} for the current\
                \ page and the total number of pages respectively."
              default: "{current} | {total}"
              type: string
        epcQrCode:
          description: "The information for creating an EPC QR code. If this object\
            \ is provided, a QR code will be printed on the invoice."
          required:
            - iban
            - recipient
          type: object
          properties:
            iban:
              description: The international bank account number of the recipient
              type: string
            bic:
              description: The bank identifier code of the recipient bank
              type: string
            recipient:
              description: The recipients name
              type: string
            reference:
              description: The payment reference
              type: string
            text:
              description: The bank transfer text
              type: string
            message:
              description: A user hint
              type: string
        swissQrInvoice:
          description: "The information for creating a Swiss QR invoice. If this object\
            \ is provided, a Swiss QR invoice code will be printed on the invoice.\
            \ For more details see Swiss QR invoice documentation."
          required:
            - creditor
          type: object
          properties:
            creditor:
              $ref: "#/components/schemas/SwissQrInvoiceCreditor"
            debtor:
              $ref: "#/components/schemas/SwissQrInvoiceDebtor"
            information:
              description: Additional unstructured information.
              type: string
            structuredInformation:
              description: Additional structured information.
              type: string
            reference:
              description: The payment reference based either on ISO 11649 or on QR
                reference.
              type: string
        currencyFormat:
          description: "The currency format to be used. SYMBOL for the currency symbol\
            \ e.g. ‚Ç¨, CODE for the currency abbreviation e.g. EUR and NAME for the\
            \ name of the currency which is translated using the 'locale' variable,\
            \ e.g. Euro."
          default: CODE
          enum:
            - SYMBOL
            - CODE
            - NAME
          type: string
    SwissQrInvoicePayload:
      required:
        - creditor
      type: object
      properties:
        creditor:
          $ref: "#/components/schemas/SwissQrInvoiceCreditor"
        debtor:
          $ref: "#/components/schemas/SwissQrInvoiceDebtor"
        currency:
          description: The currency according to ISO 4217.
          default: CHF
          enum:
            - CHF
            - EUR
          type: string
        amount:
          format: float
          description: The amount with a maximum of two decimal places
          type: number
        information:
          description: Additional unstructured information.
          type: string
        structuredInformation:
          description: Additional structured information.
          type: string
        reference:
          description: The payment reference based either on ISO 11649 or on QR reference.
          type: string
        size:
          description: The output size.
          default: QR_CODE
          enum:
            - QR_CODE
            - QR_BILL
            - A4_SHEET
          type: string
        language:
          description: The output language.
          default: EN
          enum:
            - DE
            - FR
            - IT
            - EN
          type: string
    InvoiceParty:
      required:
        - name
      type: object
      properties:
        name:
          description: The company name
          type: string
        contact:
          description: The name of a contact person in the company
          type: string
        street:
          description: The street of the company headquarters
          type: string
        postalCode:
          description: The postal code of the company headquarters
          type: string
        city:
          description: The city of the company headquarters
          type: string
        country:
          description: The country of the company headquarters
          type: string
        vatNumber:
          description: The company's VAT number
          type: string
        iban:
          description: The international bank account number of the company.
          type: string
        bic:
          description: The bank identifier code of the company
          type: string
    InvoiceMetadata:
      type: object
      properties:
        issueDate:
          description: "The date of issue of the invoice. The value is used for the\
            \ ZUGFerd e-invoice. If the value is missing, the current date is used."
          type: string
        dueDate:
          description: The due date of the invoice. The value is used for the ZUGFerd
            e-invoice.
          type: string
        number:
          description: The invoice number of the invoice. The value is used for the
            ZUGFerd e-invoice.
          type: string
    InvoicePayload:
      required:
        - sender
        - recipient
        - items
      type: object
      properties:
        template:
          description: The invoice template
          default: DEFAULT
          enum:
            - DEFAULT
            - CLASSIC
            - MODERN
            - MINIMALISTIC
          type: string
        sender:
          $ref: "#/components/schemas/InvoiceParty"
        recipient:
          $ref: "#/components/schemas/InvoiceParty"
        logo:
          description: The logo of the invoice issuer encoded as base64.
          type: string
        locale:
          description: The country or language according to which the values are to
            be formatted.
          default: de-AT
          type: string
        currency:
          description: The currency according to ISO 4217
          default: EUR
          type: string
        items:
          description: The list of items that are to be invoiced.
          type: array
          items:
            description: "A single invoice item. Either unitPrice or sumPrice must\
              \ be set. If the unitPrice field is set, the sumPrice is calculated."
            required:
              - description
            type: object
            properties:
              description:
                description: The description of the invoice item
                type: string
              amount:
                format: double
                description: The amount of the invoice item
                default: 1
                type: number
              unit:
                description: "The optional unit, for example, kilogram or piece."
                type: string
              unitPrice:
                format: double
                description: The price per unit
                type: number
              sumPrice:
                format: double
                description: "The total price of the invoice item. If the field is\
                  \ not set, it is calculated using the unit price and amount."
                type: number
              tax:
                format: double
                description: The value added tax in percent
                default: 0
                type: number
        footerItems:
          description: "The list of footer items. An informative element that is shown\
            \ in the footer of the invoice, for example, to display information about\
            \ the company."
          type: array
          items:
            description: "An informative element that is shown in the footer of the\
              \ invoice, for example, to display information about the company."
            type: object
            properties:
              title:
                description: The item title
                type: string
              values:
                description: A list of values
                type: array
                items:
                  type: string
        contextItems:
          description: "The list of context items. An informative element that is\
            \ shown in the content of the invoice, for example to display detailed\
            \ information such as the invoice number for the respective invoice."
          type: array
          items:
            description: "An informative element that is shown in the content of the\
              \ invoice, for example to display detailed information such as the invoice\
              \ number for the respective invoice."
            type: object
            properties:
              title:
                description: The item title
                type: string
              value:
                description: The item value
                type: string
        feeTaxItems:
          description: "The list of fee and tax items. An element to add any tax and/or\
            \ fees in addition to the invoice items. When using the 'percent' field,\
            \ the value is calculated from the sum of the invoice items including\
            \ any previous taxes and fees. The values are calculated in the order\
            \ passed."
          type: array
          items:
            description: "An element to add any tax and/or fees in addition to the\
              \ invoice items. When using the 'percent' field, the value is calculated\
              \ from the sum of the invoice items including any previous taxes and\
              \ fees. The values are calculated in the order passed."
            required:
              - title
            type: object
            properties:
              title:
                description: The element title for example "Dunning charge".
                type: string
              percent:
                format: float
                description: The item percent. The resulting value is calculated from
                  the sum of the invoice items including any previous taxes and fees.
                  The values are calculated in the order passed.
                type: number
              value:
                format: double
                description: The item value
                type: number
        notice:
          description: A note that is printed at the end of the invoice.
          type: string
        labels:
          description: 'This object can be used to overwrite standard invoice texts. '
          type: object
          properties:
            invoice:
              default: Invoice
              type: string
            subtotal:
              default: Subtotal
              type: string
            total:
              default: Total
              type: string
            amount:
              default: Amount
              type: string
            description:
              default: Description
              type: string
            unitPrice:
              default: Unit price
              type: string
            sumPrice:
              default: Sum price
              type: string
            numberOfPages:
              description: "Use the placeholders {current} and {total} for the current\
                \ page and the total number of pages respectively."
              default: "{current} | {total}"
              type: string
            vat:
              default: VAT
              type: string
        epcQrCode:
          description: "The information for creating an EPC QR code. If this object\
            \ is provided, a QR code will be printed on the invoice."
          type: object
          properties:
            reference:
              description: The payment reference
              type: string
            text:
              description: The bank transfer text
              type: string
            message:
              description: A user hint
              type: string
        swissQrInvoice:
          description: "The information for creating a Swiss QR invoice. If this object\
            \ is provided, a Swiss QR invoice code will be printed on the invoice.\
            \ For more details see Swiss QR invoice documentation."
          type: object
          properties:
            information:
              description: Additional unstructured information.
              type: string
            structuredInformation:
              description: Additional structured information.
              type: string
            reference:
              description: The payment reference based either on ISO 11649 or on QR
                reference.
              type: string
        currencyFormat:
          description: "The currency format to be used. SYMBOL for the currency symbol\
            \ e.g. ‚Ç¨, CODE for the currency abbreviation e.g. EUR and NAME for the\
            \ name of the currency which is translated using the 'locale' variable,\
            \ e.g. Euro."
          default: CODE
          enum:
            - SYMBOL
            - CODE
            - NAME
          type: string
        metadata:
          $ref: "#/components/schemas/InvoiceMetadata"
        zugferdDisabled:
          description: A flag to deactivate the creation of the ZUGFerd invoice.
          default: false
          type: boolean
  responses:
    HtmlToPdf:
      description: The generated PDF file
      content:
        application/pdf:
          schema:
            format: byte
            type: string
    PaymentRequired:
      description: Your remaining quota is not sufficient to perform the request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
    Forbidden:
      description: Access is not allowed. The API key may be missing from the request
        or the API key may have been revoked.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
    NotAcceptable:
      description: A required parameter is missing or in a wrong format.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
    InternalServerError:
      description: An unexpected error occurred on the server side. Please retry the
        request at a later time.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
    ServiceUnavailable:
      description: "The endpoint is temporarily unavailable, either due to planned\
        \ maintenance or outage. Please retry the request at a later time."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
    EpcQrCode:
      description: The generated QR code as PNG
      content:
        image/png:
          schema:
            format: byte
            type: string
    VatVerificationResult:
      description: The validity of the VAT ID and additional information about the
        company
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VatVerificationResult"
    GeocodeResult:
      description: The search result
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GeocodeResult"
    IndexResult:
      description: The index series and associated metadata
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IndexResult"
    InvoicePdf:
      description: The generated PDF file
      content:
        application/pdf:
          schema:
            format: byte
            type: string
    SwissQrInvoice:
      description: The generated Swiss QR invoice in the requested file format.
      content:
        image/svg+xml:
          schema:
            format: binary
            type: string
        application/svg+xml:
          schema:
            format: binary
            type: string
        image/png:
          schema:
            format: binary
            type: string
        application/pdf:
          schema:
            format: binary
            type: string
  securitySchemes:
    ApiKeyHeader:
      type: apiKey
      description: "Prefix the value with \"Bearer\". For example: \"Bearer APIKEY\""
      name: Authorization
      in: header
