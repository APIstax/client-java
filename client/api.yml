---
openapi: 3.0.3
info:
  title: APIstax
  version: 1.0.1
servers:
  - url: https://api.apistax.io/
security:
  - ApiKeyHeader: []
paths:
  /v1/html-to-pdf:
    post:
      tags:
        - HTML to PDF
      summary: Convert HTML to PDF
      operationId: convertHtmlToPdf
      requestBody:
        description: HTML payload to convert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HtmlPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/pdf:
              schema:
                format: byte
                type: string
  /v1/epc-qr-code:
    get:
      tags:
        - EPC QR Code
      summary: Generate a valid EPC QR Code
      operationId: generateEpcQrCode
      parameters:
        - name: bic
          in: query
          description: The bank identifier code of the recipient bank
          required: false
          schema:
            type: string
        - name: iban
          in: query
          description: The international bank account number of the recipient
          required: true
          schema:
            type: string
        - name: recipient
          in: query
          description: The recipients name
          required: true
          schema:
            type: string
        - name: currency
          in: query
          description: The currency according to ISO 4217
          required: false
          schema:
            default: EUR
            type: string
        - name: amount
          in: query
          description: The amount with a maximum of two decimal places
          required: false
          schema:
            format: float
            type: number
        - name: reference
          in: query
          description: The payment reference
          required: false
          schema:
            type: string
        - name: text
          in: query
          description: The bank transfer text
          required: false
          schema:
            type: string
        - name: size
          in: query
          description: The size of the QR code in pixels
          required: false
          schema:
            format: int32
            default: 300
            maximum: 2000
            minimum: 100
            type: integer
        - name: frame
          in: query
          description: Draw a frame around the QR code
          required: false
          schema:
            default: false
            type: boolean
        - name: message
          in: query
          description: A user hint
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                format: byte
                type: string
    post:
      tags:
        - EPC QR Code
      summary: Generate a valid EPC QR Code
      operationId: generateEpcQrCodeJson
      requestBody:
        description: QR Code payload to generate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpcQrCodePayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                format: byte
                type: string
  /v1/vat-verification:
    get:
      tags:
        - Verify VAT ID
      summary: Verify a companies VAT ID if it is valid
      operationId: verifyVatId
      parameters:
        - name: vatId
          in: query
          description: The VAT ID to check.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatVerificationResult'
    post:
      tags:
        - Verify VAT ID
      summary: Verify a companies VAT ID if it is valid
      operationId: verifyVatIdJson
      requestBody:
        description: VAT ID payload to verify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VatVerificationPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatVerificationResult'
  /v1/geocode/search:
    get:
      tags:
        - Geocoding
      summary: Convert a known address to geo-coordinates
      operationId: geocodeSearch
      parameters:
        - name: query
          in: query
          description: "A free-text address query. For example: \"Heldenplatz, Wien\"\
          \ or \"Wiedner Hauptstra√üe 32, 1040 Wien\""
          required: true
          schema:
            type: string
        - name: language
          in: query
          description: "The language used for result localization based on ISO 639-1.\
          \ For example: \"en\" or \"fr\""
          required: false
          schema:
            default: en
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeResult'
        "204":
          description: An empty response if no entry could be found for the specified
            query.
    post:
      tags:
        - Geocoding
      summary: Convert a known address to geo-coordinates
      operationId: geocodeSearchJson
      requestBody:
        description: Query payload to search for
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeocodeSearchPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeResult'
        "204":
          description: An empty response if no entry could be found for the specified
            query.
  /v1/geocode/reverse:
    get:
      tags:
        - Reverse Geocoding
      summary: Convert geo-coordinates to a postal address
      operationId: geocodeReverse
      parameters:
        - name: latitude
          in: query
          description: The latitude coordinate of a point to search for. For example
            "48.20661"
          required: true
          schema:
            format: double
            type: number
        - name: longitude
          in: query
          description: The longitude coordinate of a point to search for. For example
            "16.36301"
          required: true
          schema:
            format: double
            type: number
        - name: language
          in: query
          description: "The language used for result localization based on ISO 639-1.\
          \ For example: \"en\" or \"fr\""
          required: false
          schema:
            default: en
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeResult'
        "204":
          description: An empty response if no entry could be found for the specified
            coordinates.
    post:
      tags:
        - Reverse Geocoding
      summary: Convert geo-coordinates to a postal address
      operationId: geocodeReverseJson
      requestBody:
        description: Coordinates payload to search for
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeocodeReversePayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeResult'
        "204":
          description: An empty response if no entry could be found for the specified
            coordinates.
components:
  schemas:
    HtmlPayload:
      required:
        - content
      type: object
      properties:
        content:
          description: The HTML document to be converted
          type: string
        header:
          description: A HTML document used as PDF header
          type: string
        footer:
          description: A HTML document used as PDF footer
          type: string
        width:
          format: float
          description: Page width in centimeter
          default: 21
          type: number
        height:
          format: float
          description: Page height in centimeter
          default: 29.7
          type: number
        marginTop:
          format: float
          description: Top page margin in centimeter
          default: 1
          type: number
        marginBottom:
          format: float
          description: Bottom page margin in centimeter
          default: 1
          type: number
        marginStart:
          format: float
          description: Start (left) page margin in centimeter
          default: 1
          type: number
        marginEnd:
          format: float
          description: End (right) page margin in centimeter
          default: 1
          type: number
        landscape:
          description: Page orientation
          default: false
          type: boolean
        printBackground:
          description: Print background graphics
          default: false
          type: boolean
    EpcQrCodePayload:
      required:
        - iban
        - recipient
      type: object
      properties:
        bic:
          description: The bank identifier code of the recipient bank
          type: string
        iban:
          description: The international bank account number of the recipient
          type: string
        recipient:
          description: The recipients name
          type: string
        currency:
          description: The currency according to ISO 4217
          default: EUR
          type: string
        amount:
          format: float
          description: The amount with a maximum of two decimal places
          type: number
        reference:
          description: The payment reference
          type: string
        text:
          description: The bank transfer text
          type: string
        size:
          format: int32
          description: The size of the QR code in pixels
          default: 300
          maximum: 2000
          minimum: 100
          type: integer
        frame:
          description: Draw a frame around the QR code
          default: false
          type: boolean
        message:
          description: A user hint
          type: string
    VatVerificationPayload:
      required:
        - vatId
      type: object
      properties:
        vatId:
          description: The VAT ID to check.
          type: string
    VatVerificationResult:
      required:
        - valid
      type: object
      properties:
        valid:
          description: The validity of the passed VAT ID
          type: boolean
        name:
          description: The company's name related to the passed VAT ID
          type: string
        address:
          description: The company's address related to the passed VAT ID
          type: string
        countryCode:
          description: The company's country based on ISO 3166-1 alpha-2
          type: string
    GeocodeSearchPayload:
      required:
        - query
      type: object
      properties:
        query:
          description: "A free-text address query. For example: \"Heldenplatz, Wien\"\
            \ or \"Wiedner Hauptstra√üe 32, 1040 Wien\""
          type: string
        language:
          description: "The language used for result localization based on ISO 639-1.\
            \ For example: \"en\" or \"fr\""
          default: en
          type: string
    GeocodeReversePayload:
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          format: double
          description: The latitude coordinate of a point to search for. For example
            "48.20661"
          type: number
        longitude:
          format: double
          description: The longitude coordinate of a point to search for. For example
            "16.36301"
          type: number
        language:
          description: "The language used for result localization based on ISO 639-1.\
            \ For example: \"en\" or \"fr\""
          default: en
          type: string
    GeocodeResult:
      required:
        - address
        - position
      type: object
      properties:
        position:
          description: "The coordinates (latitude, longitude) of a point on a map\
            \ corresponding to the searched place"
          required:
            - latitude
            - longitude
          type: object
          properties:
            latitude:
              format: double
              description: Latitude of the address. For example "48.20661"
              type: number
            longitude:
              format: double
              description: Longitude of the address. For example "16.36301"
              type: number
        address:
          description: The postal address of the searched place
          type: object
          properties:
            houseNumber:
              description: The house number. For example "1a" or "27"
              type: string
            street:
              description: Name of the street
              type: string
            city:
              description: The localised name of the city
              type: string
            postalCode:
              description: An alphanumeric string included in a postal address such
                as post code or ZIP code. For example "1010"
              type: string
            country:
              description: The localised country name
              type: string
            countryCode:
              description: A two letter country code based on ISO 3166-1 alpha-2.
                For example "AT"
              type: string
  securitySchemes:
    ApiKeyHeader:
      type: apiKey
      description: "Prefix the value with \"Bearer\". For example: \"Bearer APIKEY\""
      name: Authorization
      in: header